2023-07-02 18:05:04.390 +02:00 [INF] Now listening on: https://localhost:7293
2023-07-02 18:05:04.408 +02:00 [INF] Now listening on: http://localhost:5293
2023-07-02 18:05:04.411 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-02 18:05:04.411 +02:00 [INF] Hosting environment: Development
2023-07-02 18:05:04.411 +02:00 [INF] Content root path: C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\
2023-07-02 18:05:05.325 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/index.html - -
2023-07-02 18:05:05.573 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/index.html - - - 200 - text/html;charset=utf-8 251.8320ms
2023-07-02 18:05:05.598 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - -
2023-07-02 18:05:05.600 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_vs/browserLink - -
2023-07-02 18:05:05.600 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - -
2023-07-02 18:05:05.601 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - - - 200 11992 application/javascript;+charset=utf-8 1.4893ms
2023-07-02 18:05:05.615 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-07-02 18:05:05.615 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - - - 0 143632 text/css 16.4498ms
2023-07-02 18:05:05.642 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 42.8927ms
2023-07-02 18:05:05.934 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - -
2023-07-02 18:05:05.935 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-07-02 18:05:05.935 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - - - 0 628 image/png 0.6772ms
2023-07-02 18:05:06.009 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - -
2023-07-02 18:05:06.089 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 79.3968ms
2023-07-02 18:05:09.224 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 18:05:09.228 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 18:05:09.254 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:05:09.524 +02:00 [INF] Fetching all tours
2023-07-02 18:05:10.536 +02:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 18:05:10.594 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 18:05:10.623 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1365.4017ms
2023-07-02 18:05:10.623 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 18:05:10.627 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1402.3856ms
2023-07-02 18:05:12.556 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 18:05:12.556 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:05:12.565 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:05:12.571 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 18:05:12.641 +02:00 [INF] Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 18:05:12.642 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 18:05:12.644 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 79.4402ms
2023-07-02 18:05:12.644 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:05:12.645 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 88.7220ms
2023-07-02 18:05:12.899 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 18:05:12.899 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:05:12.899 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:05:12.900 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 18:05:12.937 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 18:05:12.937 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 18:05:12.937 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 37.8919ms
2023-07-02 18:05:12.937 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:05:12.937 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 38.1918ms
2023-07-02 18:55:06.357 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 18:55:06.357 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 18:55:06.357 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:55:06.357 +02:00 [INF] Fetching all tours
2023-07-02 18:55:06.381 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 18:55:06.381 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 18:55:06.381 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 23.8518ms
2023-07-02 18:55:06.381 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 18:55:06.381 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 24.2697ms
2023-07-02 18:55:07.837 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 18:55:07.838 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:55:07.838 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:55:07.838 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 18:55:07.839 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 18:55:07.840 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 18:55:07.840 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 2.0594ms
2023-07-02 18:55:07.840 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:55:07.840 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.3202ms
2023-07-02 18:55:09.361 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 18:55:09.361 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:55:09.361 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 18:55:09.361 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 18:55:09.362 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 18:55:09.362 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 18:55:09.362 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.2048ms
2023-07-02 18:55:09.362 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 18:55:09.363 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.5604ms
2023-07-02 19:34:55.918 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:34:55.918 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:34:55.918 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:34:55.919 +02:00 [INF] Fetching all tours
2023-07-02 19:34:55.946 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:34:55.947 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:34:55.947 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 28.7921ms
2023-07-02 19:34:55.947 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:34:55.947 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 29.2880ms
2023-07-02 19:34:57.947 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:34:57.947 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:34:57.947 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:34:57.948 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:34:57.949 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:34:57.949 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:34:57.949 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.9953ms
2023-07-02 19:34:57.949 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:34:57.950 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.2483ms
2023-07-02 19:34:59.229 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:34:59.230 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:34:59.230 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:34:59.230 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:34:59.231 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:34:59.231 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:34:59.231 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1371ms
2023-07-02 19:34:59.231 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:34:59.231 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.4394ms
2023-07-02 19:40:03.976 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:40:03.976 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:40:03.976 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:03.977 +02:00 [INF] Fetching all tours
2023-07-02 19:40:04.003 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:40:04.004 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:40:04.004 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 27.5123ms
2023-07-02 19:40:04.004 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:40:04.004 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 28.0313ms
2023-07-02 19:40:05.926 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:40:05.926 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:05.926 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:05.927 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:40:05.928 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:05.928 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:05.928 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.942ms
2023-07-02 19:40:05.928 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:05.928 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.2849ms
2023-07-02 19:40:06.923 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:40:06.924 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:06.924 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:06.924 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:40:06.924 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:06.925 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:06.925 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.0214ms
2023-07-02 19:40:06.925 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:06.925 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.3773ms
2023-07-02 19:40:11.152 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:40:11.152 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:11.152 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:11.152 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:40:11.153 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:11.153 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:11.153 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9621ms
2023-07-02 19:40:11.153 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:11.153 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.2222ms
2023-07-02 19:40:11.928 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:40:11.928 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:11.929 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:11.929 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:40:11.930 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:11.930 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:11.930 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.5634ms
2023-07-02 19:40:11.930 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:11.931 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.2215ms
2023-07-02 19:40:12.315 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:40:12.315 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.315 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:12.315 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:40:12.316 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:12.316 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:12.316 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9258ms
2023-07-02 19:40:12.316 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.316 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.2636ms
2023-07-02 19:40:12.622 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:40:12.622 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.623 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:12.623 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:40:12.624 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:12.624 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:12.624 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.3082ms
2023-07-02 19:40:12.624 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.624 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.6381ms
2023-07-02 19:40:12.990 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:40:12.990 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.990 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:40:12.990 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:40:12.991 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:40:12.991 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:40:12.991 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9276ms
2023-07-02 19:40:12.991 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:40:12.991 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1537ms
2023-07-02 19:41:27.569 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:27.569 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:27.569 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:27.569 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:27.570 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:27.570 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:27.570 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.0529ms
2023-07-02 19:41:27.570 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:27.570 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.3263ms
2023-07-02 19:41:27.887 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:41:27.888 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:27.888 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:27.888 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:41:27.888 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:27.888 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:27.888 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8791ms
2023-07-02 19:41:27.888 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:27.889 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1201ms
2023-07-02 19:41:28.189 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:41:28.189 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.189 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:28.189 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:41:28.189 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:28.190 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:28.190 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8792ms
2023-07-02 19:41:28.190 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.190 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1418ms
2023-07-02 19:41:28.502 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:41:28.502 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.502 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:28.503 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:41:28.503 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:28.503 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:28.503 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9183ms
2023-07-02 19:41:28.503 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.503 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1665ms
2023-07-02 19:41:28.758 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:28.758 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.758 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:28.758 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:28.758 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:28.759 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:28.759 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.873ms
2023-07-02 19:41:28.759 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:28.759 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1209ms
2023-07-02 19:41:29.013 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:41:29.013 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:29.013 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:29.013 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:41:29.014 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:29.014 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:29.014 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.837ms
2023-07-02 19:41:29.014 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:29.014 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0638ms
2023-07-02 19:41:29.470 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:29.470 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:29.470 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:29.470 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:29.471 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:29.471 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:29.471 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8692ms
2023-07-02 19:41:29.471 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:29.471 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1080ms
2023-07-02 19:41:30.354 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:41:30.354 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.354 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:30.354 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:41:30.355 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:30.355 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:30.355 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.933ms
2023-07-02 19:41:30.355 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.355 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1808ms
2023-07-02 19:41:30.588 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:41:30.588 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.588 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:30.588 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:41:30.589 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:30.589 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:30.589 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8351ms
2023-07-02 19:41:30.589 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.589 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0654ms
2023-07-02 19:41:30.978 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:30.978 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.978 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:30.978 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:30.979 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:30.979 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:30.979 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8724ms
2023-07-02 19:41:30.979 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:30.979 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1023ms
2023-07-02 19:41:31.278 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:41:31.278 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.278 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:31.278 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:41:31.279 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:31.279 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:31.279 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8584ms
2023-07-02 19:41:31.279 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.279 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1206ms
2023-07-02 19:41:31.599 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:31.600 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.600 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:31.600 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:31.601 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:31.601 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:31.601 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.091ms
2023-07-02 19:41:31.601 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.601 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.3810ms
2023-07-02 19:41:31.885 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:41:31.885 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.885 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:31.885 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:41:31.886 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:31.886 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:31.886 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8744ms
2023-07-02 19:41:31.886 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:31.886 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1485ms
2023-07-02 19:41:32.433 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:41:32.433 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:32.433 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:32.433 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:41:32.434 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:32.434 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:32.434 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1594ms
2023-07-02 19:41:32.434 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:32.434 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.5074ms
2023-07-02 19:41:32.725 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 19:41:32.725 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:32.726 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:32.726 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 19:41:32.727 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:32.727 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:32.727 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.2575ms
2023-07-02 19:41:32.727 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:32.727 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.4932ms
2023-07-02 19:41:33.288 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:41:33.288 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:33.288 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:33.288 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:41:33.288 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:33.289 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:33.289 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7648ms
2023-07-02 19:41:33.289 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:33.289 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9564ms
2023-07-02 19:41:33.513 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 19:41:33.513 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:33.514 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:33.514 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 19:41:33.514 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:41:33.514 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:41:33.514 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8807ms
2023-07-02 19:41:33.514 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:41:33.514 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0724ms
2023-07-02 19:41:59.469 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:41:59.469 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:41:59.469 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:41:59.469 +02:00 [INF] Fetching all tours
2023-07-02 19:41:59.470 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:41:59.470 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:41:59.470 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 0.9718ms
2023-07-02 19:41:59.470 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:41:59.470 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.1626ms
2023-07-02 19:42:01.407 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:42:01.407 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:42:01.407 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:42:01.408 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:42:01.408 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:42:01.408 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:42:01.408 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7826ms
2023-07-02 19:42:01.408 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:42:01.408 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9687ms
2023-07-02 19:44:35.192 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:44:35.192 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:44:35.192 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:44:35.192 +02:00 [INF] Fetching all tours
2023-07-02 19:44:35.193 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:44:35.193 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:44:35.193 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 0.9783ms
2023-07-02 19:44:35.193 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:44:35.193 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.1990ms
2023-07-02 19:44:36.649 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 19:44:36.649 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:44:36.649 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:44:36.649 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 19:44:36.649 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:44:36.650 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:44:36.650 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8043ms
2023-07-02 19:44:36.650 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:44:36.650 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0054ms
2023-07-02 19:46:15.963 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:46:15.963 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:46:15.963 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:46:15.963 +02:00 [INF] Fetching all tours
2023-07-02 19:46:15.985 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:46:15.986 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:46:15.986 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 22.6419ms
2023-07-02 19:46:15.986 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:46:15.986 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 22.8726ms
2023-07-02 19:46:17.098 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:46:17.098 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:46:17.098 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:46:17.098 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:46:17.100 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:46:17.100 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:46:17.100 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 2.2417ms
2023-07-02 19:46:17.100 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:46:17.100 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.4637ms
2023-07-02 19:50:50.259 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:50:50.259 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:50:50.259 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:50:50.259 +02:00 [INF] Fetching all tours
2023-07-02 19:50:50.260 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:50:50.260 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:50:50.260 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 0.9853ms
2023-07-02 19:50:50.260 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:50:50.260 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.3617ms
2023-07-02 19:50:51.847 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 19:50:51.847 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:50:51.847 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:50:51.847 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 19:50:51.847 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 19:50:51.847 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 19:50:51.848 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7381ms
2023-07-02 19:50:51.848 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 19:50:51.848 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9442ms
2023-07-02 19:59:59.067 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 19:59:59.067 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:59:59.067 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 19:59:59.067 +02:00 [INF] Fetching all tours
2023-07-02 19:59:59.092 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 19:59:59.093 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 19:59:59.093 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 25.7022ms
2023-07-02 19:59:59.093 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 19:59:59.093 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 26.0980ms
2023-07-02 20:00:00.907 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:00:00.907 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:00:00.907 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:00:00.907 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:00:00.908 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:00:00.909 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:00:00.909 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.8004ms
2023-07-02 20:00:00.909 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:00:00.909 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.9928ms
2023-07-02 20:01:06.968 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:01:06.968 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:01:06.968 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:01:06.968 +02:00 [INF] Fetching all tours
2023-07-02 20:01:06.968 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:01:06.969 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:01:06.969 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 0.8376ms
2023-07-02 20:01:06.969 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:01:06.969 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.0243ms
2023-07-02 20:01:08.388 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:01:08.388 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:01:08.388 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:01:08.388 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:01:08.388 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:01:08.388 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:01:08.389 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7387ms
2023-07-02 20:01:08.389 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:01:08.389 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9154ms
2023-07-02 20:03:45.740 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:03:45.740 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:03:45.740 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:03:45.740 +02:00 [INF] Fetching all tours
2023-07-02 20:03:45.740 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:03:45.740 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:03:45.741 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 0.7573ms
2023-07-02 20:03:45.741 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:03:45.741 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 0.9424ms
2023-07-02 20:03:47.141 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:03:47.141 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:03:47.141 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:03:47.141 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:03:47.142 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:03:47.142 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:03:47.142 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1531ms
2023-07-02 20:03:47.142 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:03:47.142 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.4897ms
2023-07-02 20:04:01.935 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 159
2023-07-02 20:04:01.935 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:04:01.937 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:04:02.008 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:04:02.009 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:04:02.103 +02:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:04:02.122 +02:00 [ERR] An exception occurred in the database while saving changes for context type 'TourPlannerServer.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-02 20:04:02.122 +02:00 [ERR] An unexpected error occurred while upserting the tour log with ID 00000000-0000-0000-0000-000000000000.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TourPlannerServer.Controllers.TourLogController.UpsertTourLog(TourLogDto tourLogDto) in C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\Controllers\TourLogController.cs:line 77
2023-07-02 20:04:02.132 +02:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-07-02 20:04:02.135 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 197.4401ms
2023-07-02 20:04:02.135 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:04:02.135 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 159 - 500 - application/json;+charset=utf-8 199.8889ms
2023-07-02 20:05:35.579 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:05:35.579 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:35.579 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:05:35.580 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:05:35.600 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:05:35.600 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:05:35.600 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 20.8288ms
2023-07-02 20:05:35.600 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:35.600 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 21.0341ms
2023-07-02 20:05:35.950 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:05:35.950 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:35.950 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:05:35.950 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:05:35.951 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:05:35.951 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:05:35.951 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7728ms
2023-07-02 20:05:35.951 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:35.951 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9640ms
2023-07-02 20:05:36.287 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 20:05:36.287 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:36.287 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:05:36.287 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 20:05:36.288 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:05:36.288 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:05:36.288 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7952ms
2023-07-02 20:05:36.288 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:36.288 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0204ms
2023-07-02 20:05:36.573 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:05:36.573 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:36.573 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:05:36.573 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:05:36.573 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:05:36.573 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:05:36.573 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7363ms
2023-07-02 20:05:36.573 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:05:36.573 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9179ms
2023-07-02 20:07:47.089 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/TourLog - -
2023-07-02 20:07:47.089 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:07:47.091 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs() on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:07:47.091 +02:00 [INF] Fetching all tour logs.
2023-07-02 20:07:47.093 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
2023-07-02 20:07:47.094 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:07:47.094 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer) in 2.9101ms
2023-07-02 20:07:47.094 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:07:47.094 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/TourLog - - - 200 - application/json;+charset=utf-8 4.6736ms
2023-07-02 20:09:32.554 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 159
2023-07-02 20:09:32.554 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:09:32.554 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:09:32.555 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:09:32.555 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:09:32.556 +02:00 [ERR] Failed executing DbCommand (0ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:09:32.557 +02:00 [ERR] An exception occurred in the database while saving changes for context type 'TourPlannerServer.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-02 20:09:32.557 +02:00 [ERR] An unexpected error occurred while upserting the tour log with ID 00000000-0000-0000-0000-000000000000.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.InvalidCastException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array/range. See the Npgsql.EnableLegacyTimestampBehavior AppContext switch to enable legacy behavior.
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateAndGetLength(DateTime value, NpgsqlParameter parameter)
   at Npgsql.Internal.TypeHandlers.DateTimeHandlers.TimestampTzHandler.ValidateObjectAndGetLength(Object value, NpgsqlLengthCache& lengthCache, NpgsqlParameter parameter)
   at Npgsql.NpgsqlParameter.ValidateAndGetLength()
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(TypeMapper typeMapper, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TourPlannerServer.Controllers.TourLogController.UpsertTourLog(TourLogDto tourLogDto) in C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\Controllers\TourLogController.cs:line 77
2023-07-02 20:09:32.558 +02:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-07-02 20:09:32.558 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 4.1681ms
2023-07-02 20:09:32.558 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:09:32.558 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 159 - 500 - application/json;+charset=utf-8 4.3646ms
2023-07-02 20:21:45.151 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:21:45.151 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:21:45.151 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:21:45.151 +02:00 [INF] Fetching all tours
2023-07-02 20:21:45.174 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:21:45.174 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:21:45.174 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 22.8966ms
2023-07-02 20:21:45.174 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:21:45.174 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 23.1875ms
2023-07-02 20:21:46.953 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:21:46.953 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:21:46.953 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:21:46.953 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:21:46.955 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:21:46.955 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:21:46.955 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.8825ms
2023-07-02 20:21:46.955 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:21:46.955 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.1064ms
2023-07-02 20:22:02.425 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 142
2023-07-02 20:22:02.425 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:22:02.425 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:22:02.426 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:22:02.427 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:22:02.446 +02:00 [ERR] Failed executing DbCommand (19ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:22:02.450 +02:00 [ERR] An exception occurred in the database while saving changes for context type 'TourPlannerServer.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-02 20:22:02.451 +02:00 [ERR] The referenced Tour does not exist.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TourPlannerServer.Controllers.TourLogController.UpsertTourLog(TourLogDto tourLogDto) in C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\Controllers\TourLogController.cs:line 77
2023-07-02 20:22:02.452 +02:00 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-07-02 20:22:02.453 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 27.2528ms
2023-07-02 20:22:02.453 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:22:02.453 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 142 - 400 - application/json;+charset=utf-8 27.4730ms
2023-07-02 20:22:04.194 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:22:04.194 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:04.194 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:04.194 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:22:04.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:04.195 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:04.195 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8394ms
2023-07-02 20:22:04.195 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:04.195 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0127ms
2023-07-02 20:22:04.788 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:22:04.788 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:04.788 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:04.788 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:22:04.789 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:04.789 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:04.789 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7921ms
2023-07-02 20:22:04.789 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:04.789 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9645ms
2023-07-02 20:22:05.627 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 20:22:05.627 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:05.627 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:05.627 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 20:22:05.628 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:05.628 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:05.628 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7492ms
2023-07-02 20:22:05.628 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:05.628 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9390ms
2023-07-02 20:22:06.039 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:22:06.039 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.039 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:06.039 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:22:06.039 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:06.039 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:06.039 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7847ms
2023-07-02 20:22:06.040 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.040 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9597ms
2023-07-02 20:22:06.670 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:22:06.670 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.670 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:06.670 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:22:06.671 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:06.671 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:06.671 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7824ms
2023-07-02 20:22:06.671 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.671 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9653ms
2023-07-02 20:22:06.985 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:22:06.985 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.985 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:22:06.985 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:22:06.985 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:22:06.985 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:22:06.986 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7666ms
2023-07-02 20:22:06.986 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:06.986 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 0.9456ms
2023-07-02 20:22:10.286 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/TourLog - -
2023-07-02 20:22:10.286 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:10.286 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs() on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:22:10.286 +02:00 [INF] Fetching all tour logs.
2023-07-02 20:22:10.287 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
2023-07-02 20:22:10.287 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:22:10.287 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer) in 0.6687ms
2023-07-02 20:22:10.287 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:22:10.287 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/TourLog - - - 200 - application/json;+charset=utf-8 0.9046ms
2023-07-02 20:22:32.770 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 141
2023-07-02 20:22:32.771 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:22:32.771 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:22:32.772 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:22:32.772 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:22:32.772 +02:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:22:32.774 +02:00 [ERR] An exception occurred in the database while saving changes for context type 'TourPlannerServer.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-02 20:22:32.775 +02:00 [ERR] The referenced Tour does not exist.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TourPlannerServer.Controllers.TourLogController.UpsertTourLog(TourLogDto tourLogDto) in C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\Controllers\TourLogController.cs:line 77
2023-07-02 20:22:32.776 +02:00 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-07-02 20:22:32.776 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 5.3022ms
2023-07-02 20:22:32.776 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:22:32.776 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 141 - 400 - application/json;+charset=utf-8 5.4985ms
2023-07-02 20:31:34.802 +02:00 [INF] Now listening on: https://localhost:7293
2023-07-02 20:31:34.820 +02:00 [INF] Now listening on: http://localhost:5293
2023-07-02 20:31:34.823 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-02 20:31:34.823 +02:00 [INF] Hosting environment: Development
2023-07-02 20:31:34.823 +02:00 [INF] Content root path: C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\
2023-07-02 20:31:35.112 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/index.html - -
2023-07-02 20:31:35.284 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/index.html - - - 200 - text/html;charset=utf-8 174.7041ms
2023-07-02 20:31:35.312 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_vs/browserLink - -
2023-07-02 20:31:35.312 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - -
2023-07-02 20:31:35.314 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - - - 200 11992 application/javascript;+charset=utf-8 1.7963ms
2023-07-02 20:31:35.320 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 7.9803ms
2023-07-02 20:31:35.609 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - -
2023-07-02 20:31:35.616 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-07-02 20:31:35.616 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - - - 0 628 image/png 6.7836ms
2023-07-02 20:31:35.693 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - -
2023-07-02 20:31:35.760 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 67.2609ms
2023-07-02 20:31:56.671 +02:00 [INF] Now listening on: https://localhost:7293
2023-07-02 20:31:56.689 +02:00 [INF] Now listening on: http://localhost:5293
2023-07-02 20:31:56.692 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-02 20:31:56.692 +02:00 [INF] Hosting environment: Development
2023-07-02 20:31:56.692 +02:00 [INF] Content root path: C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\
2023-07-02 20:31:57.212 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/index.html - -
2023-07-02 20:31:57.410 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/index.html - - - 200 - text/html;charset=utf-8 199.8050ms
2023-07-02 20:31:57.435 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - -
2023-07-02 20:31:57.435 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_vs/browserLink - -
2023-07-02 20:31:57.435 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - -
2023-07-02 20:31:57.437 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - - - 200 11992 application/javascript;+charset=utf-8 1.9849ms
2023-07-02 20:31:57.442 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-07-02 20:31:57.442 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - - - 0 143632 text/css 7.3395ms
2023-07-02 20:31:57.460 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 24.9682ms
2023-07-02 20:31:57.589 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - -
2023-07-02 20:31:57.590 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-07-02 20:31:57.590 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - - - 0 628 image/png 0.6522ms
2023-07-02 20:31:57.665 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - -
2023-07-02 20:31:57.738 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 72.6970ms
2023-07-02 20:33:22.356 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:33:22.359 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:33:22.378 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:33:22.592 +02:00 [INF] Fetching all tours
2023-07-02 20:33:23.521 +02:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:33:23.578 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:33:23.603 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1221.7896ms
2023-07-02 20:33:23.603 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:33:23.607 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1251.1827ms
2023-07-02 20:33:24.947 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:33:24.948 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:33:24.956 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:33:24.960 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:33:25.020 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:33:25.021 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:33:25.023 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 67.0699ms
2023-07-02 20:33:25.023 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:33:25.023 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 75.4303ms
2023-07-02 20:35:36.229 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:35:36.230 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:35:36.230 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:35:36.231 +02:00 [INF] Fetching all tours
2023-07-02 20:35:36.280 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:35:36.280 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:35:36.281 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 50.8685ms
2023-07-02 20:35:36.281 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:35:36.281 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 51.3199ms
2023-07-02 20:35:38.256 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:35:38.256 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:35:38.256 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:35:38.257 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:35:38.258 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:35:38.259 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:35:38.259 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 2.3788ms
2023-07-02 20:35:38.259 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:35:38.259 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.6542ms
2023-07-02 20:37:20.747 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:37:20.747 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:37:20.747 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:37:20.747 +02:00 [INF] Fetching all tours
2023-07-02 20:37:20.748 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:37:20.748 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:37:20.748 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1.4172ms
2023-07-02 20:37:20.748 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:37:20.748 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.7816ms
2023-07-02 20:37:22.375 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:37:22.376 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:37:22.376 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:37:22.376 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:37:22.376 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:37:22.377 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:37:22.377 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.038ms
2023-07-02 20:37:22.377 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:37:22.377 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.3100ms
2023-07-02 20:41:08.729 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:41:08.729 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:41:08.729 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:41:08.729 +02:00 [INF] Fetching all tours
2023-07-02 20:41:08.753 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:41:08.753 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:41:08.753 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 24.64ms
2023-07-02 20:41:08.753 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:41:08.754 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 25.0139ms
2023-07-02 20:41:09.933 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:41:09.933 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:41:09.933 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:41:09.933 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:41:09.935 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:41:09.935 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:41:09.936 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 2.3716ms
2023-07-02 20:41:09.936 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:41:09.936 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 2.6917ms
2023-07-02 20:41:27.192 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 145
2023-07-02 20:41:27.193 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:41:27.194 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:41:27.258 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:41:27.259 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:41:27.375 +02:00 [ERR] Failed executing DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:41:27.395 +02:00 [ERR] An exception occurred in the database while saving changes for context type 'TourPlannerServer.ApplicationContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2023-07-02 20:41:27.396 +02:00 [ERR] The referenced Tour does not exist.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23503: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|233_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: FEHLER
    SqlState: 23503
    MessageText: Einfügen oder Aktualisieren in Tabelle »TourLog« verletzt Fremdschlüssel-Constraint »FK_TourLog_Tour_TourId«
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: public
    TableName: TourLog
    ConstraintName: FK_TourLog_Tour_TourId
    File: ri_triggers.c
    Line: 2607
    Routine: ri_ReportViolation
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at TourPlannerServer.Controllers.TourLogController.UpsertTourLog(TourLogDto tourLogDto) in C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\Controllers\TourLogController.cs:line 77
2023-07-02 20:41:27.406 +02:00 [INF] Executing BadRequestObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-07-02 20:41:27.409 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 214.6082ms
2023-07-02 20:41:27.409 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:41:27.409 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 145 - 400 - application/json;+charset=utf-8 216.6594ms
2023-07-02 20:42:22.839 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:42:22.840 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:42:22.840 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:42:22.840 +02:00 [INF] Fetching all tours
2023-07-02 20:42:22.841 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:42:22.841 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:42:22.841 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1.5833ms
2023-07-02 20:42:22.841 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:42:22.842 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 2.1782ms
2023-07-02 20:42:28.048 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/TourLog - -
2023-07-02 20:42:28.048 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:28.049 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs() on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:42:28.050 +02:00 [INF] Fetching all tour logs.
2023-07-02 20:42:28.052 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
2023-07-02 20:42:28.053 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:42:28.053 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer) in 3.1111ms
2023-07-02 20:42:28.053 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:28.053 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/TourLog - - - 200 - application/json;+charset=utf-8 4.9201ms
2023-07-02 20:42:32.952 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:42:32.952 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:32.952 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:42:32.952 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:42:32.953 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:42:32.953 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:42:32.953 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9069ms
2023-07-02 20:42:32.953 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:32.953 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1478ms
2023-07-02 20:42:36.361 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:42:36.361 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:36.361 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:42:36.361 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:42:36.362 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:42:36.362 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:42:36.362 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9326ms
2023-07-02 20:42:36.362 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:36.362 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1778ms
2023-07-02 20:42:36.991 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:42:36.991 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:36.991 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:42:36.991 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:42:36.991 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:42:36.992 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:42:36.992 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9174ms
2023-07-02 20:42:36.992 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:42:36.992 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1616ms
2023-07-02 20:43:48.213 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:43:48.213 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:43:48.213 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:43:48.214 +02:00 [INF] Fetching all tours
2023-07-02 20:43:48.214 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:43:48.215 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:43:48.215 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1.517ms
2023-07-02 20:43:48.215 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:43:48.215 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1.8966ms
2023-07-02 20:43:49.629 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:43:49.629 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:43:49.629 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:43:49.630 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:43:49.630 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:43:49.630 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:43:49.630 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9606ms
2023-07-02 20:43:49.630 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:43:49.631 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.2028ms
2023-07-02 20:44:02.481 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 145
2023-07-02 20:44:02.481 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:44:02.481 +02:00 [INF] Route matched with {action = "UpsertTourLog", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TourPlannerServer.Model.TourLog]] UpsertTourLog(TourPlannerServer.Model.TourLogDto) on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:44:02.482 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."Id" = @__get_Item_0
LIMIT 1
2023-07-02 20:44:02.482 +02:00 [INF] Creating new tour log with ID 00000000-0000-0000-0000-000000000000.
2023-07-02 20:44:02.484 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?' (DbType = DateTime), @p3='?' (DbType = Int32), @p4='?' (DbType = Object), @p5='?' (DbType = Single), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TourLog" ("Id", "Comment", "Date", "Difficulty", "Duration", "Rating", "TourId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2023-07-02 20:44:02.485 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:44:02.485 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:02.485 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:02.486 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:44:02.493 +02:00 [INF] Executing CreatedAtActionResult, writing value of type 'TourPlannerServer.Model.TourLog'.
2023-07-02 20:44:02.513 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer) in 32.3564ms
2023-07-02 20:44:02.513 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.UpsertTourLog (TourPlannerServer)'
2023-07-02 20:44:02.513 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7293/api/TourLog/Upsert application/json;+charset=utf-8 145 - 201 - application/json;+charset=utf-8 32.6728ms
2023-07-02 20:44:02.619 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:02.621 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:02.621 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 135.8102ms
2023-07-02 20:44:02.621 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:02.621 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 136.0312ms
2023-07-02 20:44:05.719 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/TourLog - -
2023-07-02 20:44:05.719 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:05.719 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs() on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:44:05.719 +02:00 [INF] Fetching all tour logs.
2023-07-02 20:44:05.720 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
2023-07-02 20:44:05.720 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:05.720 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer) in 0.9935ms
2023-07-02 20:44:05.720 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:05.720 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/TourLog - - - 200 - application/json;+charset=utf-8 1.2685ms
2023-07-02 20:44:19.493 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:44:19.494 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:19.494 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:19.494 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:44:19.495 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:19.495 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:19.495 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.517ms
2023-07-02 20:44:19.495 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:19.495 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.8568ms
2023-07-02 20:44:19.858 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:44:19.858 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:19.858 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:19.858 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:44:19.859 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:19.859 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:19.859 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9341ms
2023-07-02 20:44:19.859 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:19.859 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.1684ms
2023-07-02 20:44:20.563 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:44:20.563 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:20.563 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:20.563 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:44:20.564 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:20.564 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:20.564 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9196ms
2023-07-02 20:44:20.564 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:20.564 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1526ms
2023-07-02 20:44:20.960 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:44:20.960 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:20.960 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:20.960 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:44:20.961 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:20.961 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:20.961 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9805ms
2023-07-02 20:44:20.961 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:20.961 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.2234ms
2023-07-02 20:44:21.672 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 20:44:21.673 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:21.673 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:21.673 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 20:44:21.673 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:21.673 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:21.673 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8564ms
2023-07-02 20:44:21.673 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:21.674 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0914ms
2023-07-02 20:44:21.935 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:44:21.935 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:21.936 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:21.936 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:44:21.936 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:21.936 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:21.936 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8994ms
2023-07-02 20:44:21.936 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:21.937 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.1278ms
2023-07-02 20:44:22.205 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:44:22.205 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:22.205 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:22.205 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:44:22.205 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:22.205 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:22.206 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8705ms
2023-07-02 20:44:22.206 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:22.206 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0946ms
2023-07-02 20:44:22.775 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:44:22.776 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:22.776 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:22.776 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:44:22.776 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:22.776 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:22.777 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.921ms
2023-07-02 20:44:22.777 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:22.777 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.1622ms
2023-07-02 20:44:37.518 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:44:37.518 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:44:37.518 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:37.518 +02:00 [INF] Fetching all tours
2023-07-02 20:44:37.520 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:44:37.520 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:37.520 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1.7641ms
2023-07-02 20:44:37.520 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:44:37.520 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 2.0295ms
2023-07-02 20:44:38.704 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:44:38.704 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:38.704 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:38.704 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:44:38.705 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:38.705 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:38.706 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.8258ms
2023-07-02 20:44:38.706 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:38.706 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 2.2348ms
2023-07-02 20:44:39.877 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:44:39.877 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:39.877 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:39.878 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:44:39.878 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:39.878 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:39.879 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1192ms
2023-07-02 20:44:39.879 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:39.879 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.4168ms
2023-07-02 20:44:40.371 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - -
2023-07-02 20:44:40.372 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:40.372 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:40.372 +02:00 [INF] Fetching tourLogs for Tour with ID 2
2023-07-02 20:44:40.372 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:40.372 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:40.372 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.8338ms
2023-07-02 20:44:40.372 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:40.372 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/2/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0845ms
2023-07-02 20:44:40.807 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - -
2023-07-02 20:44:40.807 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:40.807 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:44:40.807 +02:00 [INF] Fetching tourLogs for Tour with ID 4
2023-07-02 20:44:40.807 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:44:40.808 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:44:40.808 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.7711ms
2023-07-02 20:44:40.808 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:40.808 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/4/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.0208ms
2023-07-02 20:44:43.124 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/TourLog - -
2023-07-02 20:44:43.124 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:43.124 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "TourLog"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs() on controller TourPlannerServer.Controllers.TourLogController (TourPlannerServer).
2023-07-02 20:44:43.125 +02:00 [INF] Fetching all tour logs.
2023-07-02 20:44:43.125 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
2023-07-02 20:44:43.125 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:44:43.125 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer) in 0.7901ms
2023-07-02 20:44:43.125 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourLogController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:44:43.125 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/TourLog - - - 200 - application/json;+charset=utf-8 1.0363ms
2023-07-02 20:46:09.961 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:46:09.961 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:46:09.961 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:46:09.962 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:46:09.962 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:46:09.962 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:46:09.962 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9085ms
2023-07-02 20:46:09.962 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:46:09.962 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.1308ms
2023-07-02 20:48:07.051 +02:00 [INF] Now listening on: https://localhost:7293
2023-07-02 20:48:07.077 +02:00 [INF] Now listening on: http://localhost:5293
2023-07-02 20:48:07.081 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-02 20:48:07.082 +02:00 [INF] Hosting environment: Development
2023-07-02 20:48:07.082 +02:00 [INF] Content root path: C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\
2023-07-02 20:48:07.942 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/index.html - -
2023-07-02 20:48:08.289 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/index.html - - - 200 - text/html;charset=utf-8 350.9773ms
2023-07-02 20:48:08.324 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - -
2023-07-02 20:48:08.327 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - -
2023-07-02 20:48:08.328 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_vs/browserLink - -
2023-07-02 20:48:08.334 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - - - 200 11992 application/javascript;+charset=utf-8 5.1899ms
2023-07-02 20:48:08.341 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-07-02 20:48:08.342 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/swagger-ui.css - - - 0 143632 text/css 17.7814ms
2023-07-02 20:48:08.422 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 94.4236ms
2023-07-02 20:48:08.495 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - -
2023-07-02 20:48:08.495 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-07-02 20:48:08.495 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/favicon-32x32.png - - - 0 628 image/png 1.0348ms
2023-07-02 20:48:08.562 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - -
2023-07-02 20:48:08.681 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 118.5542ms
2023-07-02 20:48:13.650 +02:00 [INF] Now listening on: https://localhost:7293
2023-07-02 20:48:13.668 +02:00 [INF] Now listening on: http://localhost:5293
2023-07-02 20:48:13.671 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-02 20:48:13.671 +02:00 [INF] Hosting environment: Development
2023-07-02 20:48:13.671 +02:00 [INF] Content root path: C:\Users\Manuel_work\Documents\FH\FH\semester02\swen02\FH_swen02_TourPlanner\TourPlannerServer\
2023-07-02 20:48:14.085 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/index.html - -
2023-07-02 20:48:14.261 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/index.html - - - 200 - text/html;charset=utf-8 178.5902ms
2023-07-02 20:48:14.289 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - -
2023-07-02 20:48:14.289 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/_vs/browserLink - -
2023-07-02 20:48:14.292 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_framework/aspnetcore-browser-refresh.js - - - 200 11992 application/javascript;+charset=utf-8 2.5049ms
2023-07-02 20:48:14.297 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.2463ms
2023-07-02 20:48:14.545 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - -
2023-07-02 20:48:14.620 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 74.5150ms
2023-07-02 20:48:50.197 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour - -
2023-07-02 20:48:50.201 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:48:50.221 +02:00 [INF] Route matched with {action = "GetTours", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.Tour]]] GetTours() on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:48:50.306 +02:00 [INF] Fetching all tours
2023-07-02 20:48:51.160 +02:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Description", t."Distance", t."EstTime", t."From", t."Info", t."Name", t."To", t."TransportType"
FROM "Tour" AS t
2023-07-02 20:48:51.220 +02:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.Tour, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:48:51.245 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer) in 1019.8661ms
2023-07-02 20:48:51.245 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTours (TourPlannerServer)'
2023-07-02 20:48:51.249 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour - - - 200 - application/json;+charset=utf-8 1051.9345ms
2023-07-02 20:54:21.918 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:54:21.919 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:21.927 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:54:21.931 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:54:22.012 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:54:22.026 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:54:22.029 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 102.756ms
2023-07-02 20:54:22.030 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:22.030 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 111.2773ms
2023-07-02 20:54:37.875 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:54:37.875 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:37.875 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:54:37.877 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:54:37.913 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:54:37.913 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:54:37.915 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 39.2787ms
2023-07-02 20:54:37.915 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:37.915 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 39.6414ms
2023-07-02 20:54:38.572 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:54:38.572 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:38.572 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:54:38.572 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:54:38.573 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:54:38.573 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:54:38.573 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1806ms
2023-07-02 20:54:38.573 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:54:38.574 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.4830ms
2023-07-02 20:55:22.995 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:55:22.995 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:22.995 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:55:22.996 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:55:22.996 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:55:22.997 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:55:22.997 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.2821ms
2023-07-02 20:55:22.997 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:22.997 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.6369ms
2023-07-02 20:55:23.827 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:55:23.827 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:23.827 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:55:23.828 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:55:23.828 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:55:23.828 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:55:23.828 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.0577ms
2023-07-02 20:55:23.828 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:23.829 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.3391ms
2023-07-02 20:55:29.131 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - -
2023-07-02 20:55:29.131 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:29.131 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:55:29.131 +02:00 [INF] Fetching tourLogs for Tour with ID 1
2023-07-02 20:55:29.132 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:55:29.132 +02:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2023-07-02 20:55:29.132 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 0.9988ms
2023-07-02 20:55:29.132 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:55:29.132 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/1/TourLogs - - - 404 - application/problem+json;+charset=utf-8 1.2948ms
2023-07-02 20:56:15.813 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - -
2023-07-02 20:56:15.813 +02:00 [INF] Executing endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:56:15.813 +02:00 [INF] Route matched with {action = "GetTourLogs", controller = "Tour"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[TourPlannerServer.Model.TourLog]]] GetTourLogs(Int32) on controller TourPlannerServer.Controllers.TourController (TourPlannerServer).
2023-07-02 20:56:15.813 +02:00 [INF] Fetching tourLogs for Tour with ID 3
2023-07-02 20:56:15.814 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Comment", t."Date", t."Difficulty", t."Duration", t."Rating", t."TourId"
FROM "TourLog" AS t
WHERE t."TourId" = @__id_0
2023-07-02 20:56:15.814 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TourPlannerServer.Model.TourLog, TourPlannerServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-07-02 20:56:15.814 +02:00 [INF] Executed action TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer) in 1.1151ms
2023-07-02 20:56:15.814 +02:00 [INF] Executed endpoint 'TourPlannerServer.Controllers.TourController.GetTourLogs (TourPlannerServer)'
2023-07-02 20:56:15.814 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7293/api/Tour/3/TourLogs - - - 200 - application/json;+charset=utf-8 1.3860ms
